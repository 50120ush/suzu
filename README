====
SUZU
====

version 0.0.3pre

Apr 06, 2013

Takaaki AOKI (aoki@sakura.nucleng.kyoto-u.ac.jp)

About SUZU
==========

SUZU is gui program compatible with tin.exe in SRIM (http://www.srim.org/)

Download
========

distribution packages
---------------------

installation packages are availabel at http://sakura.nucleng.kyoto-u.ac.jp/~aoki/suzu/dist

the directory includes several types of package. See `Install & Run`_ section.

- suzu-(version).w32standalone.zip
    w32 standalone 
- suzu-(version).exe
    installer for windows python environment
- suzu-(version).tar.gz, suzu-(version).zip
    installer for standard python environment
    (use 'setup.py install', 'easy_install', or 'pip)

Source code repository
----------------------

Source code is maintaned at http://sakura.nucleng.kyoto-u.ac.jp/~aoki/hg/suzu

Code is managed using mercurial (http://mercurial.selenic.com/). So you can access the latest source code set by ...

::

  hg clone http://sakura.nucleng.kyoto-u.ac.jp/~aoki/hg/suzu

Install & Run
=============

For windows, 2 options are avaliable to setup this program.
The second option is also available for unix or mac user.

Option 1: Use standalone package (for Windows)
-----------------------------------------------

1. Download Standalone package

  Download suzu-(version).w32standalone.zip. Expand contents of zip file and put them in appropriate place 

2. run

  Double-click suzu.exe  

3. (you may need following DLLs installed.)

  ::
    
     OLEAUT32.dll - C:\Windows\system32\OLEAUT32.dll
     USER32.dll - C:\Windows\system32\USER32.dll
     IMM32.dll - C:\Windows\system32\IMM32.dll
     SHELL32.dll - C:\Windows\system32\SHELL32.dll
     ole32.dll - C:\Windows\system32\ole32.dll
     COMDLG32.dll - C:\Windows\system32\COMDLG32.dll
     COMCTL32.dll - C:\Windows\system32\COMCTL32.dll
     ADVAPI32.dll - C:\Windows\system32\ADVAPI32.dll
     WS2_32.dll - C:\Windows\system32\WS2_32.dll
     GDI32.dll - C:\Windows\system32\GDI32.dll
     KERNEL32.dll - C:\Windows\system32\KERNEL32.dll


Option 2: Install as python script and package
----------------------------------------------

The second option is that intall suzu as a package of python library

Environment
+++++++++++

suzu is developed on python 2.7. In addition Tkinter (linked with tcl8.5) is adopted as GUI toolkit. In order to confirm the version of Tcl/Tk

::

  import Tkinter
  print Tkinter.TclVersion
  print Tkinter.TkVersion


Install (for Windows)
+++++++++++++++++++++

Download and start suzu-(version).win32.exe. The installer will find the path to install automatically (i.e. C:\\Python27).
The installer will put following files and folders, for example,

- C:\\Python27\\Script\\suzu.py
- C:\\Python27\\lib\\site-package\\dummy_tin
- C:\\Python27\\lib\\site-package\\suzu-(version)-pyxxx.egg-info

To install on virtualenv, see
http://stackoverflow.com/questions/3271590/can-i-install-python-windows-packages-into-virtualenvs
and dummy_tin/doc/virtualenv_win

Install from source code (for unix and mac)
+++++++++++++++++++++++++++++++++++++++++++

1. Download package archive suzu-(version).tar.gz or suzu-(version).zip
2. If you have already installed easy_install or pip, run

  ::

    easy_install suzu-(version).tar.gz

  , or

  ::

    pip install suzu-(version).tar.gz

  (If you do not have easy_install nor pip, expand above package archive and find setup.py. Then,)

  ::

    python setup.py install


Run
+++

- type suzu.py in command prompt
- or, find suzu.py using explore (i.e. C:\\Python27\\Script\\suzu.py) and double-click it.

Usage
=====

[Save (&Run Trim)]
-------------------

Fill parameters as you like and push [Save (& Run Trim)] button.

When you save data with the filename of 'TRIM.in' and you put this file in the same folder where TRIM.exe exists 
(== where SRIM is setup), a dialog window pops-up to confirm run TRIM.exe calculation with this new TRIM data.

[Load .json]
------------

Currently suzu cannot parse TRIM.in format directory, but suzu saves TRIM.in.json data with TRIM.in simultaneoulsy.
You may load this .json file by [Load .json] button.

Validation
----------

[Validation] button tests a contents of widgets. this validation routine also runs before [Save (&Run Trim)] action.

Other Buttons
-------------

[Set Example] [Dump to Console] are still remains for debugging.

More Infomation
===============

Detail information especially for developpers are found in dummy_tin/doc/* (python script package).


Bugs, issues, discussion for developers
=======================================

The author is pleased to here bug & issue reports and suggest & request for the softoware.
